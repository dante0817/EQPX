unit UTILS_DB;

interface

uses
  ComCtrls, Grids, System.SysUtils, System.Classes, Data.DB, Data.SqlExpr, FireDAC.Comp.Client, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys.SQLite, FireDAC.DApt, FireDAC.Stan.ExprFuncs;

procedure BrowseEarthquakeData(const Year, Month, Day: Integer; ListView: TListView; ProgramPath: string; MaxMagnitude: Double);

implementation

uses EQPX_1;

procedure BrowseEarthquakeData(const Year, Month, Day: Integer; ListView: TListView; ProgramPath: string; MaxMagnitude: Double);
var
  FDConnection: TFDConnection;
  FDQuery: TFDQuery;
  SQLQuery: string;
  DateFilter: string;
  DatabasePath: string;
  DateTimeValue: string;
  Magnitude: Double;
  ListItem: TListItem;
  DatePart, TimePart: string;
begin
  FDConnection := TFDConnection.Create(nil);
  FDQuery := TFDQuery.Create(nil);
  try
    // Construct the database path
    DatabasePath := ProgramPath + 'DB\EQCatalogue_web.sdb';

    // Setup SQLite connection
    FDConnection.DriverName := 'SQLite';
    FDConnection.Params.Database := DatabasePath;
    FDConnection.LoginPrompt := False;
    FDConnection.Connected := True;

    FDQuery.Connection := FDConnection;

    // Format date filter
    DateFilter := Format('%.4d-%.2d-%.2d', [Year, Month, Day]);

    // SQL query to filter data by date and magnitude
    SQLQuery := 'SELECT datetime, ms FROM EarthquakeData WHERE datetime LIKE :DateFilter AND ms < :MaxMagnitude';
    FDQuery.SQL.Text := SQLQuery;
    FDQuery.ParamByName('DateFilter').AsString := DateFilter + '%';
    FDQuery.ParamByName('MaxMagnitude').AsFloat := MaxMagnitude;

    // Execute the query
    FDQuery.Open;

    // Clear the ListView before populating new data
    ListView.Items.Clear;

    // Populate the ListView with data
    while not FDQuery.Eof do
    begin
      DateTimeValue := FDQuery.FieldByName('datetime').AsString;
      Magnitude := FDQuery.FieldByName('ms').AsFloat;

      // Split the datetime string into date and time parts
      DatePart := Copy(DateTimeValue, 1, 10);  // Extract 'YYYY-MM-DD'
      TimePart := Copy(DateTimeValue, 12, 8);  // Extract 'HH:NN:SS'

      // Add a new item to the ListView
      ListItem := ListView.Items.Add;
      ListItem.Caption := '';  // Leave the checkbox column blank
      ListItem.SubItems.Add(DatePart);  // Set the date in the second column
      ListItem.SubItems.Add(TimePart);  // Set the time in the third column
      ListItem.SubItems.Add(FormatFloat('0.0', Magnitude));  // Set the magnitude in the fourth column

      // Check the checkbox by default
//      ListItem.Checked := True;  // This line ensures the checkbox is checked

      FDQuery.Next;
    end;

  finally
    FDQuery.Free;
    FDConnection.Free;
  end;
end;

end.
